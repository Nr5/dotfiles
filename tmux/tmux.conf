set -g default-terminal "rxvt-16color"
bind-key / split-pane
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -n -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel 'xclip -i -sel p -f | xclip -i -sel c'
 
#bind -t vi-copy y copy-pipe "xclip -sel clip -i"
bind-key -n -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'xclip -i -sel p -f | xclip -i -sel c'

set -g prefix F9 

set -g pane-border-style fg=blue
set -g pane-active-border-style fg='white bold'

 
bind-key C-q select-window -t 0 \; \
	new-window -n workspace -c $HOME/development vim . \; \
	split-window -h -p 30 -c $HOME/development \; \
	select-pane -t 0 \; \
	split-window  -c $HOME/development -v -p 10 \; \
	select-pane -t 0 


bind C-w split-window -l 9 -c $HOME \; \
	run-shell -b "cat ~/.config/tmux/charmap"  


bind C-e run-shell -b "cat ~/.config/tmux/tmux_variables"

set -g status on
set -g display-panes-time 10000000
set -g status-right-length 100
set -g status-right "#[fg=white bold]\
#{?window_zoomed_flag,#[bg=black]  Zoomed  ,}#[bg=blue] \
#{?client_prefix,#[bg=blue]#[fg=cyan nobold]▀█#[bg=cyan]     #[fg=black nobold],\
	#{?#{==:#{pane_mode},copy-mode},#[bg=blue]#[fg=yellow nobold]▀█#[bg=yellow]   #[fg=white],\
	#{?#{==:#{pane_mode},view-mode},#[bg=blue]#[fg=red nobold]▀█#[bg=red]   #[fg=white],\
	#{?#{==:#{pane_mode},tree-mode},#[bg=blue]#[fg=green nobold]▀█#[bg=green]   #[fg=black],\
	#{?#{==:#{pane_mode},buffer-mode},#[bg=blue]#[fg=white nobold]▀█#[bg=white]   #[fg=black],\
	#{?#{==:#{pane_mode},client-mode},#[bg=blue]#[fg=red nobold]▀█#[bg=red]   #[fg=white],\
 #[bg=blue]#[fg=magenta nobold]▀█#[bg=magenta]    #[fg=black,nobold]}}}}}}\
#{?client_prefix, prefix   ,\
#{?pane_mode,  #{pane_mode} ,normal-mode}}\
#[fg=black,nobold]░░░▒▒▒▓▓█\
#[bg=black]#[fg=white,bold] \
#(tmux ls | grep attached | wc -l)\
#[fg=white,nobold]-\
#(tmux ls | grep -v attached | wc -l) \
#[fg=yellow,bold]#S \
#[fg=green,nobold]│\
 #(~/bin/tmux_battery_charge_indicator.sh)\
#[bg=black]#[fg=green] │#[fg=white,bold] %d %b #[fg=cyan,bold]%R "





set -g status-left "#[bg=magenta]#[fg=black]#{?window_start_flag, ▀█, └┐}"


set -g window-status-format "#[bg=magenta]#[fg=black] #I. #W \
#{?window_end_flag,#[fg=blue] ▀,\
#{?#(tmux lsw | grep -A 1 '#I:' | grep '(active)$'), ▀,\
└┐}}"



set -g window-status-current-format "#[bg=black]#[fg=magenta]#[fg=white] #I.#[fg=cyan,bold] #W #{?window_end_flag,#[fg=blue nobold],#[fg=magenta nobold]} ▀"

set -g status-style "bg=blue"
#\
#{?client_prefix,bg=cyan,\
	#{?#{==:#{pane_mode},copy-mode},bg=yellow,\
	#{?#{==:#{pane_mode},view-mode},bg=cyan,\
	#{?#{==:#{pane_mode},tree-mode},bg=green,\
	#{?#{==:#{pane_mode},buffer-mode},bg=red,\
	#{?#{==:#{pane_mode},client-mode},bg=white,\
bg=blue}}}}}}"


set -g message-style "bg=cyan,fg=black"
set -g mode-style "bg=blue"
set -g display-time 0
set-option -wg automatic-rename on

set -g window-status-separator ""


bind h split-window -c '#{pane_current_path}' -h -b 
bind j split-window -c '#{pane_current_path}' 
bind k split-window -c '#{pane_current_path}' -b
bind l split-window -c '#{pane_current_path}' -h

bind c-h split-window -h -b -f
bind c-j split-window  -f
bind c-k split-window  -b -f
bind c-l split-window  -h -f

bind -n M-F resize-pane -Z 
bind -n ª resize-pane -Z 



#bind -n C-h select-pane -L
#bind -n C-j select-pane -D 
#bind -n C-k select-pane -U
#bind -n C-l select-pane -R

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
   | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

bind-key -n 'M-H' if-shell "$is_vim" 'send-keys M-H'  'resize-pane -L'
bind-key -n 'M-J' if-shell "$is_vim" 'send-keys M-J'  'resize-pane -D'
bind-key -n 'M-K' if-shell "$is_vim" 'send-keys M-K'  'resize-pane -U'
bind-key -n 'M-L' if-shell "$is_vim" 'send-keys M-L'  'resize-pane -R'

bind-key -n '←' if-shell "$is_vim" 'send-keys M-H'  'resize-pane -L'
bind-key -n '↓' if-shell "$is_vim" 'send-keys M-J'  'resize-pane -D'
bind-key -n '↑' if-shell "$is_vim" 'send-keys M-K'  'resize-pane -U'
bind-key -n '→' if-shell "$is_vim" 'send-keys M-L'  'resize-pane -R'

#tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
#if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
#    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
#if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
#    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' 'select-pane -L'
bind-key -T copy-mode-vi 'C-j' 'select-pane -L'
bind-key -T copy-mode-vi 'C-k' 'select-pane -L'
bind-key -T copy-mode-vi 'C-l' 'select-pane -L'

bind-key -T copy-mode-vi 'M-H' 'resize-pane -L'
bind-key -T copy-mode-vi 'M-J' 'resize-pane -D'
bind-key -T copy-mode-vi 'M-K' 'resize-pane -U'
bind-key -T copy-mode-vi 'M-L' 'resize-pane -R'
                                                 
bind-key -T copy-mode-vi '←' 'resize-pane -L'
bind-key -T copy-mode-vi '↓' 'resize-pane -D'
bind-key -T copy-mode-vi '↑' 'resize-pane -U'
bind-key -T copy-mode-vi '→' 'resize-pane -R'

bind -n M-c copy-mode 
bind -n ¢   copy-mode 

bind -n C-n next-window 
bind -n C-p previous-window


bind -n M-P run "xclip -o | tmux load-buffer - ; tmux paste-buffer"

bind -n Þ run "xclip -o | tmux load-buffer - ; tmux paste-buffer"

unbind -n M-h
unbind -n M-j
unbind -n M-k
unbind -n M-l
unbind -n M-n

#set -gw status-keys vi

